{"version":3,"sources":["components/Header.js","components/Footer.js","components/WeatherDetail.js","components/WeatherSearch.js","components/WeatherTable.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Footer","WeatherDetail","selectedDay","Date","dt","toDateString","style","width","src","weather","icon","main","temp","day","toFixed","description","toUpperCase","sunrise","toTimeString","sunset","WeatherSearch","props","handleSearch","e","val","target","value","handleChange","setState","location","state","onChange","this","type","placeholder","onClick","React","Component","WeatherTable","scope","weathers","map","index","key","handleRowClick","Main","fetchAPI","fetch","then","response","json","data","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1fc38fb1.chunk.js","sourcesContent":["/*\r\n * --------------------------------------------------------------------\r\n * Project: SK2\r\n * Version: 0.1.1\r\n * File: Header.js\r\n * Created: Tuesday, 6th October 2020 4:19:21 pm\r\n * Modified: Tuesday, 6th October 2020 4:47:22 pm\r\n * Author: Shahrom Azmi Nazeer (shahrom@scs.my)\r\n *\r\n * Copyright (C) 2020 - System Consultancy Services Sdn. Bhd.\r\n * --------------------------------------------------------------------\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n/// Stateless or Functional Component\r\nfunction Header() {\r\n  return (\r\n    <header className=\"bg-dark text-light py-3 text-center\">\r\n      <h1>Weather Forecast</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","/*\r\n * --------------------------------------------------------------------\r\n * Project: SK2\r\n * Version: 0.1.1\r\n * File: Footer.js\r\n * Created: Tuesday, 6th October 2020 4:19:21 pm\r\n * Modified: Tuesday, 6th October 2020 4:47:29 pm\r\n * Author: Shahrom Azmi Nazeer (shahrom@scs.my)\r\n *\r\n * Copyright (C) 2020 - System Consultancy Services Sdn. Bhd.\r\n * --------------------------------------------------------------------\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n/// Stateless or Functional Component using Arrow notation\r\nexport const Footer = () => {\r\n  return (\r\n    <footer className=\"bg-dark text-light py-2 text-center\">\r\n      <p>SCS Copyright &copy; 2020 </p>\r\n    </footer>\r\n  );\r\n};\r\n","/*\r\n * --------------------------------------------------------------------\r\n * Project: SK2\r\n * Version: 0.1.1\r\n * File: WeatherDetail.js\r\n * Created: Tuesday, 6th October 2020 4:22:41 pm\r\n * Modified: Tuesday, 6th October 2020 4:47:00 pm\r\n * Author: Shahrom Azmi Nazeer (shahrom@scs.my)\r\n *\r\n * Copyright (C) 2020 - System Consultancy Services Sdn. Bhd.\r\n * --------------------------------------------------------------------\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nfunction WeatherDetail({ selectedDay }) {\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h5>Weather Details</h5>\r\n      <div className=\"card px-5 text-center\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">{new Date(selectedDay.dt * 1000).toDateString()}</h4>\r\n\r\n          <p className=\"card-text\">\r\n            <img\r\n              style={{ width: 50 }}\r\n              src={`https://openweathermap.org/img/wn/${selectedDay.weather[0].icon}@2x.png`}\r\n            />\r\n            {selectedDay.weather[0].main}\r\n          </p>\r\n          <p className=\"card-text\">\r\n            {(selectedDay.temp.day - 273.15).toFixed(0)} &deg; C\r\n          </p>\r\n          <p className=\"card-text\">{selectedDay.weather[0].description.toUpperCase()}</p>\r\n          <p className=\"card-text\">\r\n            Sun Rise: {new Date(selectedDay.sunrise * 1000).toTimeString()}\r\n          </p>\r\n          <p className=\"card-text\">\r\n            Sun Set: {new Date(selectedDay.sunset * 1000).toTimeString()}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherDetail;\r\n","/*\r\n * --------------------------------------------------------------------\r\n * Project: SK2\r\n * Version: 0.1.1\r\n * File: WeatherSearch.js\r\n * Created: Tuesday, 6th October 2020 4:21:46 pm\r\n * Modified: Tuesday, 6th October 2020 4:46:37 pm\r\n * Author: Shahrom Azmi Nazeer (shahrom@scs.my)\r\n *\r\n * Copyright (C) 2020 - System Consultancy Services Sdn. Bhd.\r\n * --------------------------------------------------------------------\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nclass WeatherSearch extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      location: \"\",\r\n    };\r\n  }\r\n\r\n  handleSearch = (e) => {\r\n    var val = e.target.value;\r\n    this.props.handleSearch(val);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let value = e.target.value;\r\n    this.setState({\r\n      location: value,\r\n    });\r\n  };\r\n\r\n  // getWeather = async (location) => {\r\n  //   const api_call = await fetch(\r\n  //     \"http://api.openweathermap.org/data/2.5/weather?q=\" +\r\n  //       location +\r\n  //       \"&appid=9fd7a449d055dba26a982a3220f32aa2\"\r\n  //   );\r\n\r\n  //   const response = await api_call.json();\r\n\r\n  //   alert(response.weather[0].id);\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Location\"\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              onClick={this.handleSearch}\r\n              value={this.state.location}\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherSearch;\r\n","/*\r\n * --------------------------------------------------------------------\r\n * Project: SK2\r\n * Version: 0.1.1\r\n * File: WeatherTable.js\r\n * Created: Tuesday, 6th October 2020 4:22:40 pm\r\n * Modified: Tuesday, 6th October 2020 4:47:07 pm\r\n * Author: Shahrom Azmi Nazeer (shahrom@scs.my)\r\n *\r\n * Copyright (C) 2020 - System Consultancy Services Sdn. Bhd.\r\n * --------------------------------------------------------------------\r\n */\r\n\r\nimport React, { isValidElement } from \"react\";\r\n\r\nfunction WeatherTable(props) {\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h5>Weather Forecast (7 Days)</h5>\r\n      <table className=\"table table-bordered table-hover table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\">Weather</th>\r\n            <th scope=\"col\">Date</th>\r\n            <th scope=\"col\">Temperature</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.weathers.map((val, index) => {\r\n            return (\r\n              <tr key={index} onClick={() => props.handleRowClick(val)}>\r\n                <td>{index + 1}</td>\r\n                <td>\r\n                  <div>\r\n                    <img\r\n                      style={{ width: 50 }}\r\n                      src={`https://openweathermap.org/img/wn/${val.weather[0].icon}@2x.png`}\r\n                    />\r\n                    {val.weather[0].main}\r\n                  </div>\r\n                </td>\r\n                <td>{new Date(val.dt * 1000).toDateString()}</td>\r\n                <td>{(val.temp.day - 273.15).toFixed(0)} &deg; C</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherTable;\r\n","/*\r\n * --------------------------------------------------------------------\r\n * Project: SK2\r\n * Version: 0.1.1\r\n * File: Main.js\r\n * Created: Tuesday, 6th October 2020 4:19:27 pm\r\n * Modified: Tuesday, 6th October 2020 4:47:15 pm\r\n * Author: Shahrom Azmi Nazeer (shahrom@scs.my)\r\n *\r\n * Copyright (C) 2020 - System Consultancy Services Sdn. Bhd.\r\n * --------------------------------------------------------------------\r\n */\r\n\r\nimport React from \"react\";\r\nimport WeatherDetail from \"./WeatherDetail\";\r\nimport WeatherSearch from \"./WeatherSearch\";\r\nimport WeatherTable from \"./WeatherTable\";\r\n\r\nclass Main extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      weathers: [],\r\n      selectedDay: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.fetchAPI(\"Kuala Lumpur\");\r\n  }\r\n\r\n  handleSearch = (location) => {\r\n    this.fetchAPI(location);\r\n  };\r\n\r\n  handleRowClick = (val) => {\r\n    this.setState({\r\n      selectedDay: val,\r\n    });\r\n  };\r\n\r\n  // Using the back quote\r\n  fetchAPI(location) {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast/daily?q=${location}&appid=9782b24d506f53b56b45b8f288d37803`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          weathers: data[\"list\"],\r\n          selectedDay: null,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <WeatherSearch handleSearch={this.handleSearch} />\r\n\r\n        {/* /// Conditional rendering */}\r\n        {this.state.weathers ? (\r\n          <WeatherTable\r\n            weathers={this.state.weathers}\r\n            handleRowClick={this.handleRowClick}\r\n          />\r\n        ) : (\r\n          <div />\r\n        )}\r\n\r\n        {/* /// Conditional rendering */}\r\n        {this.state.selectedDay ? (\r\n          <WeatherDetail selectedDay={this.state.selectedDay} />\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport { Footer } from \"./components/Footer\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}